// <auto-generated />
using System;
using EmployeeHub_MinimalAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeHub_MinimalAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeHub_MinimalAPI.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsedLeaveDaysId")
                        .HasColumnType("int");

                    b.Property<int>("VacationDays")
                        .HasColumnType("int");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UsedLeaveDaysId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "bob@gmail.com",
                            Name = "Bob Bobsson",
                            Password = "$2b$10$U92VNputGbz4J.z1m3ZUp.E46DdJ22KUJ72.XPvhNXktyehEpU9ha",
                            Salt = "$2b$10$U92VNputGbz4J.z1m3ZUp.",
                            VacationDays = 0,
                            isAdmin = false
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane@gmail.com",
                            Name = "Jane Smith",
                            Password = "$2b$10$W3PETHdv.y/exsGEkTvNPegz4rYs.bZ1/9NbI73Nv53yNMoep3bNC",
                            Salt = "$2b$10$W3PETHdv.y/exsGEkTvNPe",
                            VacationDays = 15,
                            isAdmin = false
                        },
                        new
                        {
                            Id = 3,
                            Email = "alice@gmail.com",
                            Name = "Alice Johnson",
                            Password = "$2b$10$5BS2ZgnUYHKPe5Uj.DUwbecByHn9vkCH5613N.Z10E3zxQpAkuxy2",
                            Salt = "$2b$10$5BS2ZgnUYHKPe5Uj.DUwbe",
                            VacationDays = 12,
                            isAdmin = false
                        },
                        new
                        {
                            Id = 4,
                            Email = "dick@gmail.com",
                            Name = "Dick Brown",
                            Password = "$2b$10$AKxwczP13370BrKE4MZ.7ONBndVMMzE4Z4X7mn0qbaZSGfbrz7Oy6",
                            Salt = "$2b$10$AKxwczP13370BrKE4MZ.7O",
                            VacationDays = 18,
                            isAdmin = false
                        },
                        new
                        {
                            Id = 5,
                            Email = "eva@gmail.com",
                            Name = "Eva Williams",
                            Password = "$2b$10$aN/1IRODUdyBQd29rawy5OTqcKz.vFfQD5w.g0dTDSQZjAFdyDMx.",
                            Salt = "$2b$10$aN/1IRODUdyBQd29rawy5O",
                            VacationDays = 14,
                            isAdmin = false
                        },
                        new
                        {
                            Id = 6,
                            Email = "admin",
                            Name = "Administrator",
                            Password = "$2b$10$ehYSUTlNLSDfAoIC6HNd0.m1ERoBrCNSJJVga1sR6UnaZ84jZd4Hu",
                            Salt = "$2b$10$ehYSUTlNLSDfAoIC6HNd0.",
                            VacationDays = 0,
                            isAdmin = true
                        });
                });

            modelBuilder.Entity("EmployeeHub_MinimalAPI.Models.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Pending")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResponseMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveRequests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            EndDate = new DateTime(2023, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaveTypeId = 1,
                            Pending = 0,
                            RequestDate = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2023, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            EndDate = new DateTime(2023, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaveTypeId = 2,
                            Pending = 1,
                            RequestDate = new DateTime(2023, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResponseMessage = "Approved",
                            StartDate = new DateTime(2023, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 3,
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaveTypeId = 3,
                            Pending = 0,
                            RequestDate = new DateTime(2023, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 4,
                            EndDate = new DateTime(2023, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaveTypeId = 4,
                            Pending = 1,
                            RequestDate = new DateTime(2023, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResponseMessage = "Approved",
                            StartDate = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            EmployeeId = 5,
                            EndDate = new DateTime(2023, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeaveTypeId = 5,
                            Pending = 1,
                            RequestDate = new DateTime(2023, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResponseMessage = "Approved",
                            StartDate = new DateTime(2023, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EmployeeHub_MinimalAPI.Models.LeaveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaxDays")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsedLeaveDaysId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsedLeaveDaysId");

                    b.ToTable("LeaveTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxDays = 20,
                            Name = "Vacation"
                        },
                        new
                        {
                            Id = 2,
                            MaxDays = 10,
                            Name = "Sick Leave"
                        },
                        new
                        {
                            Id = 3,
                            MaxDays = 15,
                            Name = "Maternity Leave"
                        },
                        new
                        {
                            Id = 4,
                            MaxDays = 10,
                            Name = "Paternity Leave"
                        },
                        new
                        {
                            Id = 5,
                            MaxDays = 5,
                            Name = "Bereavement Leave"
                        });
                });

            modelBuilder.Entity("EmployeeHub_MinimalAPI.Models.UsedLeaveDays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UsedLeaveDays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Days = 10,
                            EmployeeId = 1,
                            LeaveTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Days = 10,
                            EmployeeId = 2,
                            LeaveTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Days = 0,
                            EmployeeId = 3,
                            LeaveTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Days = 0,
                            EmployeeId = 4,
                            LeaveTypeId = 4
                        },
                        new
                        {
                            Id = 5,
                            Days = 1,
                            EmployeeId = 5,
                            LeaveTypeId = 5
                        });
                });

            modelBuilder.Entity("EmployeeHub_MinimalAPI.Models.Employee", b =>
                {
                    b.HasOne("EmployeeHub_MinimalAPI.Models.UsedLeaveDays", null)
                        .WithMany("Employees")
                        .HasForeignKey("UsedLeaveDaysId");
                });

            modelBuilder.Entity("EmployeeHub_MinimalAPI.Models.LeaveRequest", b =>
                {
                    b.HasOne("EmployeeHub_MinimalAPI.Models.Employee", "Employee")
                        .WithMany("LeaveRequest")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeHub_MinimalAPI.Models.LeaveType", "LeaveType")
                        .WithMany("LeaveRequest")
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("EmployeeHub_MinimalAPI.Models.LeaveType", b =>
                {
                    b.HasOne("EmployeeHub_MinimalAPI.Models.UsedLeaveDays", null)
                        .WithMany("LeaveTypes")
                        .HasForeignKey("UsedLeaveDaysId");
                });

            modelBuilder.Entity("EmployeeHub_MinimalAPI.Models.Employee", b =>
                {
                    b.Navigation("LeaveRequest");
                });

            modelBuilder.Entity("EmployeeHub_MinimalAPI.Models.LeaveType", b =>
                {
                    b.Navigation("LeaveRequest");
                });

            modelBuilder.Entity("EmployeeHub_MinimalAPI.Models.UsedLeaveDays", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("LeaveTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
